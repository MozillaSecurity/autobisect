[build-system]
requires = ["poetry>=1.0.5"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "autobisect"
description = "Automatic bisection utility for Mozilla Firefox and SpiderMonkey"
version = "2.0.0"

classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Topic :: Security",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
keywords = ["fuzz", "fuzzing", "security", "test", "testing", "bisection"]

authors = [
    "Jason Kratzer <jkratzer@mozilla.com>"
]
maintainers = [
    "Mozilla Fuzzing Team <fuzzing@mozilla.com>"
]

license = "MPL-2.0"
readme = "README.md"

repository = "https://github.com/MozillaSecurity/autobisect"
homepage = "https://github.com/MozillaSecurity/autobisect"


[tool.poetry.dependencies]
fuzzfetch = "^1.3.0"
grizzly-framework = "^0.13.2"
lithium-reducer = "^0.5.0"
python = "^3.6.1"

[tool.poetry.dev-dependencies]
black = "^19.10b0"
codecov = "^2.1.11"
coverage = { extras = ["toml"], version = "^5.1" }
flake8 = "^3.7.9"
flake8-isort = "^4.0.0"
flake8-quotes = "^2.1.1"
freezegun = "^0.3.15"
pre-commit = "^2.13.0"
pylint = "^2.4.4"
pytest = "^5.3.5"
pytest-cov = "^2.8.1"
pytest-flake8 = "^1.0.4"
pytest-black = "^0.3.8"
pytest-mock = "^3.0.0"
pytest-pylint = "^0.17.0"
requests_mock = "^1.8.0"
tox = "^3.14.5"
gitlint = "^0.15.1"

[tool.poetry.scripts]
autobisect = "autobisect.main:main"

[tool.coverage.run]
omit = [
    "*/setup.py",
    "*/tests/*",
    "*/build/*",
    "*/dist/*",
    "*/.tox/*",
    "*/.egg/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]

[tool.isort]
force_sort_within_sections = false
known_first_party = "autobisect"
profile = "black"

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
    "bad-continuation",
    "fixme",
    "invalid-name",
    "line-too-long",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "missing-module-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-return-statements",
    "too-many-statements",
    "useless-object-inheritance"
]

[tool.pytest.ini_options]
log_level = "DEBUG"

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
build_command = "pip install poetry && poetry build"
commit_subject = "chore(release): {version} [skip ci]"
upload_to_pypi = true
upload_to_release = false
