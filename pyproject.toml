[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=1.0.5"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover"
]

[tool.coverage.run]
omit = [
  "*/.egg/*",
  "*/.tox/*",
  "*/build/*",
  "*/dist/*",
  "*/setup.py",
  "*/tests/*"
]

[tool.isort]
force_sort_within_sections = false
known_first_party = "autobisect"
profile = "black"

[tool.mypy]
exclude = "^.*tests.*$"
ignore_missing_imports = "True"
implicit_reexport = "True"
strict = "True"

[tool.poetry]
authors = [
  "Jason Kratzer <jkratzer@mozilla.com>"
]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Security",
  "Topic :: Software Development :: Testing"
]
description = "Automatic bisection utility for Mozilla Firefox and SpiderMonkey"
homepage = "https://github.com/MozillaSecurity/autobisect"
include = ["tests/**"]
keywords = ["bisection", "fuzz", "fuzzing", "security", "test", "testing"]
license = "MPL-2.0"
maintainers = [
  "Mozilla Fuzzing Team <fuzzing@mozilla.com>"
]
name = "autobisect"
packages = [{from = "src", include = "autobisect"}]
readme = "README.md"
repository = "https://github.com/MozillaSecurity/autobisect"
version = "7.8.0"

[tool.poetry.dependencies]
fuzzfetch = "^8.0.0"
grizzly-framework = "^0.19.3"
lithium-reducer = "^3.0.0"
platformdirs = "^4.2.2"
python = "^3.8.1"

[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
coverage = {extras = ["toml"], version = "^7.2.3"}
flake8 = "^7.1.0"
flake8-isort = "^6.0.0"
flake8-quotes = "^3.3.2"
freezegun = "^1.5.1"
gitlint = "^0.19.1"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
pylint = "^3.2.6"
pytest = "^8.3.1"
pytest-black = "^0.3.8"
pytest-cov = "^5.0.0"
pytest-freezer = "^0.4.8"
pytest-mock = "^3.0.0"
pytest-pylint = "^0.21.0"
pytest-recording = "^0.13.2"
toml-sort = "^0.23.1"
tox = "^3.14.5"
types-freezegun = "^1.1.10"
types-pytz = "^2024.1.0.20240417"
types-requests = "^2.25.0"
types-six = "^1.16.21.20240513"

[tool.poetry.scripts]
autobisect = "autobisect.main:main"

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
  "fixme",
  "invalid-name",
  "line-too-long",
  "logging-format-interpolation",
  "logging-fstring-interpolation",
  "missing-module-docstring",
  "too-few-public-methods",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-locals",
  "too-many-nested-blocks",
  "too-many-return-statements",
  "too-many-statements",
  "useless-object-inheritance"
]

[tool.pytest.ini_options]
log_level = "DEBUG"

[tool.semantic_release]
build_command = "poetry build && twine upload --verbose dist/*"
build_command_env = ["TWINE_PASSWORD", "TWINE_USERNAME"]
commit_subject = "chore(release): {version} [skip ci]"
upload_to_vcs_release = false
version_toml = ["pyproject.toml:tool.poetry.version"]
